#on appServer VM, try to connect to your database again:
sqlcmd -S tcp:serverNNNNN.database.windows.net,1433 -d marketplaceDb -U '[username]' -P '[password]' -N -l 30

##Adding network access ##
1. Use the server-level allow access to Azure services rule
  In the SQL server pane, in the left menu pane, under Security, select Networking.Scroll down to Exceptions, select the checkbox for Allow Azure services and resources to 
 access this server, and then select Save. Wait until the system acknowledges this change.

2. Use a database-level IP address rule :T-SQL RULE: 
 EXECUTE sp_set_database_firewall_rule N'My Firewall Rule', '40.112.128.214', '40.112.128.214'

3. Use a server-level IP address rule
 sqlcmd -S tcp:serverNNNNN.database.windows.net,1433 -d marketplaceDb -U '[username]' -P '[password]' -N -l 30

#This IP address is likely to change at some point, breaking your access as soon as that happens. Now look at how virtual network rules can be beneficial in your configuration.

4. Use a server-level virtual network rule:IF VM is running in Azure, you can use a server-level virtual network rule to isolate access, and make it easy to enable future services to gain access to the database.
 Back in the Azure portal and still on the Networking pane, under Virtual networks, select Add a virtual network rule.
 The Create/Update virtual network rule dialog box appears. 
Virtual network->	appServerVNET
Subnet name / Address prefix->	appServerSubnet / 10.0.0.0/24

###Control who can access your database:###
1. Create a database user:
  a. sqlcmd -S tcp:serverNNNNN.database.windows.net,1433 -d marketplaceDb -U '[username]' -P '[password]' -N -l 30 
  //This user is a contained user that has only allow access to the marketplace database.
  b. CREATE USER ApplicationUser WITH PASSWORD = 'YourStrongPassword1';
     GO
//With these credentials, the user is able to authenticate to the database, but they aren't authorized to access any data. Grant this user access.
2. Grant permissions to a user:
  a. ALTER ROLE db_datareader ADD MEMBER ApplicationUser;
    ALTER ROLE db_datawriter ADD MEMBER ApplicationUser;
    GO
//You could deny a user's access to other elements within the database using the DENY operator
  b.  DENY SELECT ON SalesLT.Address TO ApplicationUser;
      GO
//from T-SQL prompt, enter exit to exit your session and sign back. 

###Secure your data in transit, at rest, and on display###
//Azure SQL Database enforces Transport Layer Security (TLS) encryption always for all connections, which ensures all data is encrypted in transit between the database and the client. 
1. In the left menu pane, under Security, select Data encryption. In the data encryption option, verify that Data encryption is set to On. You should also see an encryption status of Encrypted.

//Dynamic data masking
//By using the dynamic data masking feature of Azure SQL Database, you can limit the data that is displayed to the user.
2. on the marketplaceDb database panel, in the left menu pane, under Security, select Dynamic Data Masking.->
Add a mask for the required field. 

###Monitor your database####
  1. Azure SQL Database auditing
    a.  Security, select Auditing->Auditing is turned off by default. To enable it on your database server, toggle Enable Azure AQL Auditing to ON.
  
  2. Advanced Data Security for Azure SQL Database
    a. under Security, select Microsoft Defender for Cloud.-> Select Enable Microsoft Defender for SQL->Periodic recurring scans
  
  3. Data discovery & classification
    a. The Classification tab shows columns within your tables that need to be protected. Some of the columns might have sensitive information or might be considered classified in different countries or regions.

